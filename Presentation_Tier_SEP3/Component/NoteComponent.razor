@using Microsoft.AspNetCore.Components
@using Presentation_Tier_SEP3.Data.NoteData
@using Presentation_Tier_SEP3.Data.Notifications
@using Presentation_Tier_SEP3.Data.Notifications.NotificationModel
@using Presentation_Tier_SEP3.Model

@inject NotificationManager _notificationManager
@inject INoteService _noteService

<tbody>
<tr>
    <th scope="row">Name</th>
    <td>@Note.name</td>
</tr>
<tr>
    <th scope="row">Year</th>
    <td>@Note.year</td>
</tr>
<tr>
    <th scope="row">Status</th>
    <td>@Note.status</td>
</tr>
<tr>
    <th scope="row">Text</th>
    <td style="width: 100%" class="table-warning">@Note.text</td>
</tr>
</tbody>

<button class="btn btn-primary btn-sm" data-bs-toggle="modal" data-bs-target="@("#exampleEditModal" + Note.id)">Edit</button>
<div class="modal fade" id="@("exampleEditModal" + Note.id)" tabindex="-1" aria-labelledby="@("exampleEditModalLabel" + Note.id)" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered">
        <div class="modal-content" style="background-color:white">
            <div class="modal-header">
                <h5 class="modal-title" id="@("exampleEditModalLabel" + Note.id)">Note @Note.name in Group @GroupName hey</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Cancel"></button>
            </div>
            <div class="modal-body">
                <EditForm Model="@Note" OnValidSubmit="@SubmitEditNote">
                    <DataAnnotationsValidator/>
                    <ValidationSummary/>
                    <p>
                        <label class="d-flex flex-row">
                            <text class="col-2">Week:</text>
                            <InputNumber class="col-2" @bind-Value="Note.week"/>
                        </label>
                    </p>
                    <p>
                        <label class="d-flex flex-row">
                            <text class="col-2"> Year:</text>
                            <InputNumber class="col-2" @bind-Value="Note.year"/>
                        </label>
                    </p>
                    <p>
                        <label class="d-flex flex-row">
                            <text class="col-2"> Name:</text>
                            <InputText class="col-6" @bind-Value="Note.name"/>
                        </label>
                    </p>
                    <p>
                        <label class="d-flex flex-row">
                            <text class="col-2"> Status:</text>
                            <InputSelect class="col-3" @bind-Value="Note.status">
                                <option value="">Not started</option>
                                <option value="Started">Started</option>
                                <option value="Finished">Finished</option>
                            </InputSelect>
                        </label>
                    </p>
                    <p>
                        <label class="d-flex flex-row">
                            <text class="col-2 textCenterer"> Text:</text>
                            <InputTextArea class="col-6" @bind-Value="Note.text"/>
                        </label>
                    </p>
                    <button type="submit" class="btn btn-primary" data-bs-dismiss="modal">Save changes</button>
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                </EditForm>
            </div>
        </div>
    </div>
</div>
<button class="btn btn-danger btn-sm" data-bs-toggle="modal" data-bs-target="@("#exampleDelete" + Note.id)">Delete</button>
<div class="modal fade" id="@("exampleDelete" + Note.id)" tabindex="-1" role="dialog" aria-labelledby="@("exampleModalCenterTitle" + Note.id)" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered" role="document">
        <div class="modal-content" style="background-color: white">
            <div class="modal-header">
                <h5 class="modal-title" id="@("exampleModalLongTitle" + Note.id)">Are you sure you want to delete note @Note.name?</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Cancel"></button>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                <button type="button" class="btn btn-primary" data-bs-dismiss="modal" @onclick="@(DeleteNote)">Save changes</button>
            </div>
        </div>
    </div>
</div>
<br>


@code {
    // Parameter to specify what Note object is in focus.
    [Parameter]
    public Note Note { get; set; }

    [Parameter]
    public string? GroupName { get; set; }

    // TODO Add relevant comment
    [Parameter]
    public EventCallback<string> OnClick { get; set; }

    // Note object to be used in <EditForm> component. 
    private Note _noteModel = new Note(0,  0, 0, 0, "", "", "");

    protected override async Task OnInitializedAsync()
    {
       
    }

    protected override void OnParametersSet()
    {
        StateHasChanged();
    }


    // Method that takes Note from <EditForm> and sends it to business to replace Note with same ID.
    private async void SubmitEditNote()
    {
        if (Note.name.Equals("") || Note.name.Equals(null))
        {
            Note.name = "Note";
        }
        Notification notification = await _noteService.EditNote(new Note(Note.id, Note.groupId, Note.week, Note.year, Note.name, Note.status, Note.text));
        await OnClick.InvokeAsync();
        await _notificationManager.Show(notification);
    }

    // Method that takes Note and sends its ID to business to delete it.
    private async Task DeleteNote()
    {
        Notification notification = await _noteService.DeleteNote(Note.id);
        await OnClick.InvokeAsync();
        await _notificationManager.Show(notification);
    }

}