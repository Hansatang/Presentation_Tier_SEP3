// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: Protos/businessServer.proto
// </auto-generated>
#pragma warning disable 0414, 1591
#region Designer generated code

using grpc = global::Grpc.Core;

namespace Presentation_Tier_SEP3 {
  /// <summary>
  /// The business service definition.
  /// </summary>
  public static partial class BusinessServer
  {
    static readonly string __ServiceName = "BusinessServ.BusinessServer";

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static void __Helper_SerializeMessage(global::Google.Protobuf.IMessage message, grpc::SerializationContext context)
    {
      #if !GRPC_DISABLE_PROTOBUF_BUFFER_SERIALIZATION
      if (message is global::Google.Protobuf.IBufferMessage)
      {
        context.SetPayloadLength(message.CalculateSize());
        global::Google.Protobuf.MessageExtensions.WriteTo(message, context.GetBufferWriter());
        context.Complete();
        return;
      }
      #endif
      context.Complete(global::Google.Protobuf.MessageExtensions.ToByteArray(message));
    }

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static class __Helper_MessageCache<T>
    {
      public static readonly bool IsBufferMessage = global::System.Reflection.IntrospectionExtensions.GetTypeInfo(typeof(global::Google.Protobuf.IBufferMessage)).IsAssignableFrom(typeof(T));
    }

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static T __Helper_DeserializeMessage<T>(grpc::DeserializationContext context, global::Google.Protobuf.MessageParser<T> parser) where T : global::Google.Protobuf.IMessage<T>
    {
      #if !GRPC_DISABLE_PROTOBUF_BUFFER_SERIALIZATION
      if (__Helper_MessageCache<T>.IsBufferMessage)
      {
        return parser.ParseFrom(context.PayloadAsReadOnlySequence());
      }
      #endif
      return parser.ParseFrom(context.PayloadAsNewBuffer());
    }

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Presentation_Tier_SEP3.Request> __Marshaller_BusinessServ_Request = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Presentation_Tier_SEP3.Request.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Presentation_Tier_SEP3.Reply> __Marshaller_BusinessServ_Reply = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Presentation_Tier_SEP3.Reply.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Presentation_Tier_SEP3.NoteRequest> __Marshaller_BusinessServ_NoteRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Presentation_Tier_SEP3.NoteRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Presentation_Tier_SEP3.PostGroupRequest> __Marshaller_BusinessServ_PostGroupRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Presentation_Tier_SEP3.PostGroupRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Presentation_Tier_SEP3.AddGroupMemberRequest> __Marshaller_BusinessServ_AddGroupMemberRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Presentation_Tier_SEP3.AddGroupMemberRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Presentation_Tier_SEP3.UserRequest> __Marshaller_BusinessServ_UserRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Presentation_Tier_SEP3.UserRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Presentation_Tier_SEP3.DeleteGroupMemberRequest> __Marshaller_BusinessServ_DeleteGroupMemberRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Presentation_Tier_SEP3.DeleteGroupMemberRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Presentation_Tier_SEP3.RegisterRequest> __Marshaller_BusinessServ_RegisterRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Presentation_Tier_SEP3.RegisterRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Presentation_Tier_SEP3.RegisterReply> __Marshaller_BusinessServ_RegisterReply = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Presentation_Tier_SEP3.RegisterReply.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Presentation_Tier_SEP3.GetUserRequest> __Marshaller_BusinessServ_GetUserRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Presentation_Tier_SEP3.GetUserRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Presentation_Tier_SEP3.EditUserRequest> __Marshaller_BusinessServ_EditUserRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Presentation_Tier_SEP3.EditUserRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Presentation_Tier_SEP3.PostInvitationRequest> __Marshaller_BusinessServ_PostInvitationRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Presentation_Tier_SEP3.PostInvitationRequest.Parser));

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Presentation_Tier_SEP3.Request, global::Presentation_Tier_SEP3.Reply> __Method_GetNoteList = new grpc::Method<global::Presentation_Tier_SEP3.Request, global::Presentation_Tier_SEP3.Reply>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetNoteList",
        __Marshaller_BusinessServ_Request,
        __Marshaller_BusinessServ_Reply);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Presentation_Tier_SEP3.NoteRequest, global::Presentation_Tier_SEP3.Reply> __Method_PostNote = new grpc::Method<global::Presentation_Tier_SEP3.NoteRequest, global::Presentation_Tier_SEP3.Reply>(
        grpc::MethodType.Unary,
        __ServiceName,
        "PostNote",
        __Marshaller_BusinessServ_NoteRequest,
        __Marshaller_BusinessServ_Reply);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Presentation_Tier_SEP3.NoteRequest, global::Presentation_Tier_SEP3.Reply> __Method_PutNote = new grpc::Method<global::Presentation_Tier_SEP3.NoteRequest, global::Presentation_Tier_SEP3.Reply>(
        grpc::MethodType.Unary,
        __ServiceName,
        "PutNote",
        __Marshaller_BusinessServ_NoteRequest,
        __Marshaller_BusinessServ_Reply);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Presentation_Tier_SEP3.Request, global::Presentation_Tier_SEP3.Reply> __Method_DeleteNote = new grpc::Method<global::Presentation_Tier_SEP3.Request, global::Presentation_Tier_SEP3.Reply>(
        grpc::MethodType.Unary,
        __ServiceName,
        "DeleteNote",
        __Marshaller_BusinessServ_Request,
        __Marshaller_BusinessServ_Reply);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Presentation_Tier_SEP3.Request, global::Presentation_Tier_SEP3.Reply> __Method_GetGroupList = new grpc::Method<global::Presentation_Tier_SEP3.Request, global::Presentation_Tier_SEP3.Reply>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetGroupList",
        __Marshaller_BusinessServ_Request,
        __Marshaller_BusinessServ_Reply);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Presentation_Tier_SEP3.PostGroupRequest, global::Presentation_Tier_SEP3.Reply> __Method_PostGroup = new grpc::Method<global::Presentation_Tier_SEP3.PostGroupRequest, global::Presentation_Tier_SEP3.Reply>(
        grpc::MethodType.Unary,
        __ServiceName,
        "PostGroup",
        __Marshaller_BusinessServ_PostGroupRequest,
        __Marshaller_BusinessServ_Reply);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Presentation_Tier_SEP3.Request, global::Presentation_Tier_SEP3.Reply> __Method_DeleteGroup = new grpc::Method<global::Presentation_Tier_SEP3.Request, global::Presentation_Tier_SEP3.Reply>(
        grpc::MethodType.Unary,
        __ServiceName,
        "DeleteGroup",
        __Marshaller_BusinessServ_Request,
        __Marshaller_BusinessServ_Reply);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Presentation_Tier_SEP3.Request, global::Presentation_Tier_SEP3.Reply> __Method_GetGroupMemberList = new grpc::Method<global::Presentation_Tier_SEP3.Request, global::Presentation_Tier_SEP3.Reply>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetGroupMemberList",
        __Marshaller_BusinessServ_Request,
        __Marshaller_BusinessServ_Reply);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Presentation_Tier_SEP3.AddGroupMemberRequest, global::Presentation_Tier_SEP3.Reply> __Method_AddGroupMember = new grpc::Method<global::Presentation_Tier_SEP3.AddGroupMemberRequest, global::Presentation_Tier_SEP3.Reply>(
        grpc::MethodType.Unary,
        __ServiceName,
        "AddGroupMember",
        __Marshaller_BusinessServ_AddGroupMemberRequest,
        __Marshaller_BusinessServ_Reply);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Presentation_Tier_SEP3.UserRequest, global::Presentation_Tier_SEP3.Reply> __Method_DeleteGroupMember = new grpc::Method<global::Presentation_Tier_SEP3.UserRequest, global::Presentation_Tier_SEP3.Reply>(
        grpc::MethodType.Unary,
        __ServiceName,
        "DeleteGroupMember",
        __Marshaller_BusinessServ_UserRequest,
        __Marshaller_BusinessServ_Reply);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Presentation_Tier_SEP3.DeleteGroupMemberRequest, global::Presentation_Tier_SEP3.Reply> __Method_LeaveGroup = new grpc::Method<global::Presentation_Tier_SEP3.DeleteGroupMemberRequest, global::Presentation_Tier_SEP3.Reply>(
        grpc::MethodType.Unary,
        __ServiceName,
        "LeaveGroup",
        __Marshaller_BusinessServ_DeleteGroupMemberRequest,
        __Marshaller_BusinessServ_Reply);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Presentation_Tier_SEP3.Request, global::Presentation_Tier_SEP3.Reply> __Method_ValidateUser = new grpc::Method<global::Presentation_Tier_SEP3.Request, global::Presentation_Tier_SEP3.Reply>(
        grpc::MethodType.Unary,
        __ServiceName,
        "ValidateUser",
        __Marshaller_BusinessServ_Request,
        __Marshaller_BusinessServ_Reply);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Presentation_Tier_SEP3.RegisterRequest, global::Presentation_Tier_SEP3.RegisterReply> __Method_RegisterUser = new grpc::Method<global::Presentation_Tier_SEP3.RegisterRequest, global::Presentation_Tier_SEP3.RegisterReply>(
        grpc::MethodType.Unary,
        __ServiceName,
        "RegisterUser",
        __Marshaller_BusinessServ_RegisterRequest,
        __Marshaller_BusinessServ_RegisterReply);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Presentation_Tier_SEP3.GetUserRequest, global::Presentation_Tier_SEP3.Reply> __Method_GetUserList = new grpc::Method<global::Presentation_Tier_SEP3.GetUserRequest, global::Presentation_Tier_SEP3.Reply>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetUserList",
        __Marshaller_BusinessServ_GetUserRequest,
        __Marshaller_BusinessServ_Reply);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Presentation_Tier_SEP3.EditUserRequest, global::Presentation_Tier_SEP3.Reply> __Method_EditUser = new grpc::Method<global::Presentation_Tier_SEP3.EditUserRequest, global::Presentation_Tier_SEP3.Reply>(
        grpc::MethodType.Unary,
        __ServiceName,
        "EditUser",
        __Marshaller_BusinessServ_EditUserRequest,
        __Marshaller_BusinessServ_Reply);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Presentation_Tier_SEP3.UserRequest, global::Presentation_Tier_SEP3.Reply> __Method_DeleteUser = new grpc::Method<global::Presentation_Tier_SEP3.UserRequest, global::Presentation_Tier_SEP3.Reply>(
        grpc::MethodType.Unary,
        __ServiceName,
        "DeleteUser",
        __Marshaller_BusinessServ_UserRequest,
        __Marshaller_BusinessServ_Reply);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Presentation_Tier_SEP3.Request, global::Presentation_Tier_SEP3.Reply> __Method_GetInvitationList = new grpc::Method<global::Presentation_Tier_SEP3.Request, global::Presentation_Tier_SEP3.Reply>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetInvitationList",
        __Marshaller_BusinessServ_Request,
        __Marshaller_BusinessServ_Reply);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Presentation_Tier_SEP3.PostInvitationRequest, global::Presentation_Tier_SEP3.Reply> __Method_PostInvitation = new grpc::Method<global::Presentation_Tier_SEP3.PostInvitationRequest, global::Presentation_Tier_SEP3.Reply>(
        grpc::MethodType.Unary,
        __ServiceName,
        "PostInvitation",
        __Marshaller_BusinessServ_PostInvitationRequest,
        __Marshaller_BusinessServ_Reply);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Presentation_Tier_SEP3.Request, global::Presentation_Tier_SEP3.Reply> __Method_DeleteInvitation = new grpc::Method<global::Presentation_Tier_SEP3.Request, global::Presentation_Tier_SEP3.Reply>(
        grpc::MethodType.Unary,
        __ServiceName,
        "DeleteInvitation",
        __Marshaller_BusinessServ_Request,
        __Marshaller_BusinessServ_Reply);

    /// <summary>Service descriptor</summary>
    public static global::Google.Protobuf.Reflection.ServiceDescriptor Descriptor
    {
      get { return global::Presentation_Tier_SEP3.BusinessServerReflection.Descriptor.Services[0]; }
    }

    /// <summary>Client for BusinessServer</summary>
    public partial class BusinessServerClient : grpc::ClientBase<BusinessServerClient>
    {
      /// <summary>Creates a new client for BusinessServer</summary>
      /// <param name="channel">The channel to use to make remote calls.</param>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public BusinessServerClient(grpc::ChannelBase channel) : base(channel)
      {
      }
      /// <summary>Creates a new client for BusinessServer that uses a custom <c>CallInvoker</c>.</summary>
      /// <param name="callInvoker">The callInvoker to use to make remote calls.</param>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public BusinessServerClient(grpc::CallInvoker callInvoker) : base(callInvoker)
      {
      }
      /// <summary>Protected parameterless constructor to allow creation of test doubles.</summary>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      protected BusinessServerClient() : base()
      {
      }
      /// <summary>Protected constructor to allow creation of configured clients.</summary>
      /// <param name="configuration">The client configuration.</param>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      protected BusinessServerClient(ClientBaseConfiguration configuration) : base(configuration)
      {
      }

      /// <summary>
      ///Note
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Presentation_Tier_SEP3.Reply GetNoteList(global::Presentation_Tier_SEP3.Request request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetNoteList(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      ///Note
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Presentation_Tier_SEP3.Reply GetNoteList(global::Presentation_Tier_SEP3.Request request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetNoteList, null, options, request);
      }
      /// <summary>
      ///Note
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Presentation_Tier_SEP3.Reply> GetNoteListAsync(global::Presentation_Tier_SEP3.Request request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetNoteListAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      ///Note
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Presentation_Tier_SEP3.Reply> GetNoteListAsync(global::Presentation_Tier_SEP3.Request request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetNoteList, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Presentation_Tier_SEP3.Reply PostNote(global::Presentation_Tier_SEP3.NoteRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return PostNote(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Presentation_Tier_SEP3.Reply PostNote(global::Presentation_Tier_SEP3.NoteRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_PostNote, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Presentation_Tier_SEP3.Reply> PostNoteAsync(global::Presentation_Tier_SEP3.NoteRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return PostNoteAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Presentation_Tier_SEP3.Reply> PostNoteAsync(global::Presentation_Tier_SEP3.NoteRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_PostNote, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Presentation_Tier_SEP3.Reply PutNote(global::Presentation_Tier_SEP3.NoteRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return PutNote(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Presentation_Tier_SEP3.Reply PutNote(global::Presentation_Tier_SEP3.NoteRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_PutNote, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Presentation_Tier_SEP3.Reply> PutNoteAsync(global::Presentation_Tier_SEP3.NoteRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return PutNoteAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Presentation_Tier_SEP3.Reply> PutNoteAsync(global::Presentation_Tier_SEP3.NoteRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_PutNote, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Presentation_Tier_SEP3.Reply DeleteNote(global::Presentation_Tier_SEP3.Request request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return DeleteNote(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Presentation_Tier_SEP3.Reply DeleteNote(global::Presentation_Tier_SEP3.Request request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_DeleteNote, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Presentation_Tier_SEP3.Reply> DeleteNoteAsync(global::Presentation_Tier_SEP3.Request request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return DeleteNoteAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Presentation_Tier_SEP3.Reply> DeleteNoteAsync(global::Presentation_Tier_SEP3.Request request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_DeleteNote, null, options, request);
      }
      /// <summary>
      ///Group
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Presentation_Tier_SEP3.Reply GetGroupList(global::Presentation_Tier_SEP3.Request request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetGroupList(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      ///Group
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Presentation_Tier_SEP3.Reply GetGroupList(global::Presentation_Tier_SEP3.Request request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetGroupList, null, options, request);
      }
      /// <summary>
      ///Group
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Presentation_Tier_SEP3.Reply> GetGroupListAsync(global::Presentation_Tier_SEP3.Request request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetGroupListAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      ///Group
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Presentation_Tier_SEP3.Reply> GetGroupListAsync(global::Presentation_Tier_SEP3.Request request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetGroupList, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Presentation_Tier_SEP3.Reply PostGroup(global::Presentation_Tier_SEP3.PostGroupRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return PostGroup(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Presentation_Tier_SEP3.Reply PostGroup(global::Presentation_Tier_SEP3.PostGroupRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_PostGroup, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Presentation_Tier_SEP3.Reply> PostGroupAsync(global::Presentation_Tier_SEP3.PostGroupRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return PostGroupAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Presentation_Tier_SEP3.Reply> PostGroupAsync(global::Presentation_Tier_SEP3.PostGroupRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_PostGroup, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Presentation_Tier_SEP3.Reply DeleteGroup(global::Presentation_Tier_SEP3.Request request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return DeleteGroup(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Presentation_Tier_SEP3.Reply DeleteGroup(global::Presentation_Tier_SEP3.Request request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_DeleteGroup, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Presentation_Tier_SEP3.Reply> DeleteGroupAsync(global::Presentation_Tier_SEP3.Request request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return DeleteGroupAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Presentation_Tier_SEP3.Reply> DeleteGroupAsync(global::Presentation_Tier_SEP3.Request request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_DeleteGroup, null, options, request);
      }
      /// <summary>
      ///GroupMember
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Presentation_Tier_SEP3.Reply GetGroupMemberList(global::Presentation_Tier_SEP3.Request request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetGroupMemberList(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      ///GroupMember
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Presentation_Tier_SEP3.Reply GetGroupMemberList(global::Presentation_Tier_SEP3.Request request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetGroupMemberList, null, options, request);
      }
      /// <summary>
      ///GroupMember
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Presentation_Tier_SEP3.Reply> GetGroupMemberListAsync(global::Presentation_Tier_SEP3.Request request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetGroupMemberListAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      ///GroupMember
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Presentation_Tier_SEP3.Reply> GetGroupMemberListAsync(global::Presentation_Tier_SEP3.Request request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetGroupMemberList, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Presentation_Tier_SEP3.Reply AddGroupMember(global::Presentation_Tier_SEP3.AddGroupMemberRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return AddGroupMember(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Presentation_Tier_SEP3.Reply AddGroupMember(global::Presentation_Tier_SEP3.AddGroupMemberRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_AddGroupMember, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Presentation_Tier_SEP3.Reply> AddGroupMemberAsync(global::Presentation_Tier_SEP3.AddGroupMemberRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return AddGroupMemberAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Presentation_Tier_SEP3.Reply> AddGroupMemberAsync(global::Presentation_Tier_SEP3.AddGroupMemberRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_AddGroupMember, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Presentation_Tier_SEP3.Reply DeleteGroupMember(global::Presentation_Tier_SEP3.UserRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return DeleteGroupMember(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Presentation_Tier_SEP3.Reply DeleteGroupMember(global::Presentation_Tier_SEP3.UserRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_DeleteGroupMember, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Presentation_Tier_SEP3.Reply> DeleteGroupMemberAsync(global::Presentation_Tier_SEP3.UserRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return DeleteGroupMemberAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Presentation_Tier_SEP3.Reply> DeleteGroupMemberAsync(global::Presentation_Tier_SEP3.UserRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_DeleteGroupMember, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Presentation_Tier_SEP3.Reply LeaveGroup(global::Presentation_Tier_SEP3.DeleteGroupMemberRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return LeaveGroup(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Presentation_Tier_SEP3.Reply LeaveGroup(global::Presentation_Tier_SEP3.DeleteGroupMemberRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_LeaveGroup, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Presentation_Tier_SEP3.Reply> LeaveGroupAsync(global::Presentation_Tier_SEP3.DeleteGroupMemberRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return LeaveGroupAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Presentation_Tier_SEP3.Reply> LeaveGroupAsync(global::Presentation_Tier_SEP3.DeleteGroupMemberRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_LeaveGroup, null, options, request);
      }
      /// <summary>
      ///User 
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Presentation_Tier_SEP3.Reply ValidateUser(global::Presentation_Tier_SEP3.Request request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ValidateUser(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      ///User 
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Presentation_Tier_SEP3.Reply ValidateUser(global::Presentation_Tier_SEP3.Request request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_ValidateUser, null, options, request);
      }
      /// <summary>
      ///User 
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Presentation_Tier_SEP3.Reply> ValidateUserAsync(global::Presentation_Tier_SEP3.Request request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ValidateUserAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      ///User 
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Presentation_Tier_SEP3.Reply> ValidateUserAsync(global::Presentation_Tier_SEP3.Request request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_ValidateUser, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Presentation_Tier_SEP3.RegisterReply RegisterUser(global::Presentation_Tier_SEP3.RegisterRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return RegisterUser(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Presentation_Tier_SEP3.RegisterReply RegisterUser(global::Presentation_Tier_SEP3.RegisterRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_RegisterUser, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Presentation_Tier_SEP3.RegisterReply> RegisterUserAsync(global::Presentation_Tier_SEP3.RegisterRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return RegisterUserAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Presentation_Tier_SEP3.RegisterReply> RegisterUserAsync(global::Presentation_Tier_SEP3.RegisterRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_RegisterUser, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Presentation_Tier_SEP3.Reply GetUserList(global::Presentation_Tier_SEP3.GetUserRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetUserList(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Presentation_Tier_SEP3.Reply GetUserList(global::Presentation_Tier_SEP3.GetUserRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetUserList, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Presentation_Tier_SEP3.Reply> GetUserListAsync(global::Presentation_Tier_SEP3.GetUserRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetUserListAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Presentation_Tier_SEP3.Reply> GetUserListAsync(global::Presentation_Tier_SEP3.GetUserRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetUserList, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Presentation_Tier_SEP3.Reply EditUser(global::Presentation_Tier_SEP3.EditUserRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return EditUser(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Presentation_Tier_SEP3.Reply EditUser(global::Presentation_Tier_SEP3.EditUserRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_EditUser, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Presentation_Tier_SEP3.Reply> EditUserAsync(global::Presentation_Tier_SEP3.EditUserRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return EditUserAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Presentation_Tier_SEP3.Reply> EditUserAsync(global::Presentation_Tier_SEP3.EditUserRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_EditUser, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Presentation_Tier_SEP3.Reply DeleteUser(global::Presentation_Tier_SEP3.UserRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return DeleteUser(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Presentation_Tier_SEP3.Reply DeleteUser(global::Presentation_Tier_SEP3.UserRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_DeleteUser, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Presentation_Tier_SEP3.Reply> DeleteUserAsync(global::Presentation_Tier_SEP3.UserRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return DeleteUserAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Presentation_Tier_SEP3.Reply> DeleteUserAsync(global::Presentation_Tier_SEP3.UserRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_DeleteUser, null, options, request);
      }
      /// <summary>
      ///Invitation 
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Presentation_Tier_SEP3.Reply GetInvitationList(global::Presentation_Tier_SEP3.Request request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetInvitationList(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      ///Invitation 
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Presentation_Tier_SEP3.Reply GetInvitationList(global::Presentation_Tier_SEP3.Request request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetInvitationList, null, options, request);
      }
      /// <summary>
      ///Invitation 
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Presentation_Tier_SEP3.Reply> GetInvitationListAsync(global::Presentation_Tier_SEP3.Request request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetInvitationListAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      ///Invitation 
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Presentation_Tier_SEP3.Reply> GetInvitationListAsync(global::Presentation_Tier_SEP3.Request request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetInvitationList, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Presentation_Tier_SEP3.Reply PostInvitation(global::Presentation_Tier_SEP3.PostInvitationRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return PostInvitation(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Presentation_Tier_SEP3.Reply PostInvitation(global::Presentation_Tier_SEP3.PostInvitationRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_PostInvitation, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Presentation_Tier_SEP3.Reply> PostInvitationAsync(global::Presentation_Tier_SEP3.PostInvitationRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return PostInvitationAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Presentation_Tier_SEP3.Reply> PostInvitationAsync(global::Presentation_Tier_SEP3.PostInvitationRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_PostInvitation, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Presentation_Tier_SEP3.Reply DeleteInvitation(global::Presentation_Tier_SEP3.Request request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return DeleteInvitation(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Presentation_Tier_SEP3.Reply DeleteInvitation(global::Presentation_Tier_SEP3.Request request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_DeleteInvitation, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Presentation_Tier_SEP3.Reply> DeleteInvitationAsync(global::Presentation_Tier_SEP3.Request request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return DeleteInvitationAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Presentation_Tier_SEP3.Reply> DeleteInvitationAsync(global::Presentation_Tier_SEP3.Request request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_DeleteInvitation, null, options, request);
      }
      /// <summary>Creates a new instance of client from given <c>ClientBaseConfiguration</c>.</summary>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      protected override BusinessServerClient NewInstance(ClientBaseConfiguration configuration)
      {
        return new BusinessServerClient(configuration);
      }
    }

  }
}
#endregion
